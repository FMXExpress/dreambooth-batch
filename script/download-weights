#!/usr/bin/env python3.11
import os
import shutil

import torch
from diffusers.pipelines.stable_diffusion.safety_checker import (
    StableDiffusionSafetyChecker,
)
from transformers import CLIPFeatureExtractor

MODEL_CACHE = "diffusers-cache"
SAFETY_MODEL_ID = "CompVis/stable-diffusion-safety-checker"

if os.path.exists(MODEL_CACHE):
    shutil.rmtree(MODEL_CACHE)
os.makedirs(MODEL_CACHE, exist_ok=True)

safety_checker = StableDiffusionSafetyChecker.from_pretrained(
    SAFETY_MODEL_ID,
    torch_dtype=torch.float16,
    cache_dir=MODEL_CACHE,
)
torch.save(safety_checker, f"{MODEL_CACHE}/safety_checker.pth")


feature_extractor = CLIPFeatureExtractor.from_pretrained(
    "openai/clip-vit-base-patch32", cache_dir=MODEL_CACHE
)
torch.save(feature_extractor, f"{MODEL_CACHE}/feature_extractor.pth")
os.system(f"rm -rf {MODEL_CACHE}/model*")
